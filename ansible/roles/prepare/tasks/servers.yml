---

# Each server must start and then be populated
# either by zone files or direct API interaction

- name: Make Folders
  file:
    path: "{{item}}"
    state: directory
  loop:
    - "/home/{{ansible_user}}/{{working_dir}}/data"
    - "/home/{{ansible_user}}/{{working_dir}}/tools"
    - "/home/{{ansible_user}}/{{working_dir}}/results"

- name: Parse templates from master to servers
  template: 
    src: "buffer/{{item.src}}"
    dest: "/home/{{ansible_user}}/{{working_dir}}/{{item.dest}}"
  loop:
    - { src: 'bind9.conf.j2', dest: "bind9.conf" }
    - { src: 'knot2.conf.j2', dest: "knot2.conf" }
    - { src: 'nsd4.conf.j2', dest: "nsd4.conf" }
    - { src: 'bind9r.conf.j2', dest: "bind9r.conf" }
    - { src: 'knot2r.conf.j2', dest: "knot2r.conf" }
    - { src: 'nsd4r.conf.j2', dest: "nsd4r.conf" }

- name: Send static environment vars
  template:
    src: templates/env_vars.sh.j2
    dest: "/home/{{ansible_user}}/{{working_dir}}/env_vars.sh"

- name: Copy zonelists
  copy:
    src: "buffer/{{item}}"
    dest: "/home/{{ansible_user}}/{{working_dir}}/data/{{item}}"
  loop:
    - zonelist
    - parsed_zonelist

- name: Create zone extraction folders
  file:
    path: "/home/{{ansible_user}}/{{working_dir}}/data/{{item}}"
    state: directory
  loop:
    - "kvsZones"
    - "zones"

- name: Extract zones to data folder
  unarchive:
    dest: "/home/{{ansible_user}}/{{working_dir}}/data/"
    src: "buffer/{{item}}"
    remote_src: no
  loop:
    - kvsZones.tgz
    - zones.tgz
  
- name: Copy Script templates
  template:
    dest: "/home/{{ansible_user}}/{{working_dir}}/tools/{{item.dest}}"
    src: "templates/{{item.src}}"
    mode: 0774
  loop:
    - { src: 'gather_stats.sh.j2', dest: "gather_stats.sh" }
    - { src: 'compute_rate.sh.j2', dest: "compute_rate.sh" }