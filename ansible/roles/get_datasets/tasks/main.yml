---

# Runs on requester

- name: Make Folders
  file:
    path: "{{item}}"
    state: directory
  loop:
    - "/home/{{ansible_user}}/{{working_dir}}/data"
    - "/home/{{ansible_user}}/{{working_dir}}/tools"
    - "/home/{{ansible_user}}/{{working_dir}}/results"
    # Random zones directory
    - "/home/{{ansible_user}}/{{working_dir}}/data/zones"
    - "/home/{{ansible_user}}/{{working_dir}}/data/singlezone"
    # Scrapped zones
    - "/home/{{ansible_user}}/{{working_dir}}/data/kvsZones"

- name: Download records
  command: '.local/bin/gdown "https://drive.google.com/uc?id=1UdTx0RKg_RbW4Ql08ojudWySLWV0WIGw" -O /home/{{ansible_user}}/{{working_dir}}/data/dns-rr.txt'
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: Download records
  command: 'gdown "https://drive.google.com/uc?id=1UdTx0RKg_RbW4Ql08ojudWySLWV0WIGw" -O /home/{{ansible_user}}/{{working_dir}}/data/dns-rr.txt'
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat'

- name: Copy scripts
  copy:
    src: files/
    dest: "/home/{{ansible_user}}/{{working_dir}}/tools"

- name: Copy generation templates to data folder
  copy:
    src: "files/{{item}}"
    dest: "/home/{{ansible_user}}/{{working_dir}}/data/{{item}}"
  loop:
    - wordlist
    - zone.tpl

- name: Recover only A,HINFO,TXT records from dataset
  shell: grep -P "IN\tA|HINFO|TXT\t" dns-rr.txt > dataset.txt
  args:
    chdir: "/home/{{ansible_user}}/{{working_dir}}/data"

- name: Reduce number of RR if necessary
  shell: "head -n {{subsample_rr}} dataset.txt > tmp.txt; mv tmp.txt dataset.txt"
  when: subsample_rr is defined

- name: Create a single zone from dataset.txt and parsed_zonelist
  command: python3 ../tools/parse_rr_to_zone.py dataset.txt -o ./main.zone
  args:
    chdir: "/home/{{ansible_user}}/{{working_dir}}/data"

- name: Create zones from dataset.txt
  command: python3 ../../tools/parse_rr_to_zone.py ../dataset.txt
  args: 
    chdir: "/home/{{ansible_user}}/{{working_dir}}/data/kvsZones"

- name: Remove zonelist from parsed zones
  command: rm parsed_zonelist
  args: 
    chdir: "/home/{{ansible_user}}/{{working_dir}}/data/kvsZones"
  
- name: Create random zones
  command: "python3 ../tools/gen_zonelist.py {{total_random_zone_count}}"
  args: 
    chdir: "/home/{{ansible_user}}/{{working_dir}}/data"